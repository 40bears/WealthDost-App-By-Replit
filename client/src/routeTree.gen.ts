/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyOtpRouteImport } from './routes/verify-otp'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CreateAccountRouteImport } from './routes/create-account'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthDashboardRouteImport } from './routes/_auth.dashboard'

const VerifyOtpRoute = VerifyOtpRouteImport.update({
  id: '/verify-otp',
  path: '/verify-otp',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateAccountRoute = CreateAccountRouteImport.update({
  id: '/create-account',
  path: '/create-account',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDashboardRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-account': typeof CreateAccountRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/verify-otp': typeof VerifyOtpRoute
  '/dashboard': typeof AuthDashboardRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-account': typeof CreateAccountRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/verify-otp': typeof VerifyOtpRoute
  '/dashboard': typeof AuthDashboardRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/create-account': typeof CreateAccountRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/verify-otp': typeof VerifyOtpRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-account'
    | '/login'
    | '/signup'
    | '/verify-otp'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-account'
    | '/login'
    | '/signup'
    | '/verify-otp'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/create-account'
    | '/login'
    | '/signup'
    | '/verify-otp'
    | '/_auth/dashboard'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  CreateAccountRoute: typeof CreateAccountRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  VerifyOtpRoute: typeof VerifyOtpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-otp': {
      id: '/verify-otp'
      path: '/verify-otp'
      fullPath: '/verify-otp'
      preLoaderRoute: typeof VerifyOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-account': {
      id: '/create-account'
      path: '/create-account'
      fullPath: '/create-account'
      preLoaderRoute: typeof CreateAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  CreateAccountRoute: CreateAccountRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  VerifyOtpRoute: VerifyOtpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
